import { useState } from "react";
import {
  getUserCoins,
  giftUserCoins,
  addAdmin,
  getUserGameHistory,
} from "../../../api/services/admingService";
import "./cStyle.css";
import { toast } from "react-toastify";

const Controls = () => {
  const [giftedCoinsData, setGiftedCoinsData] = useState({
    userId: "",
    amount: "",
    errors: "",
  });
  const [userCoinsData, setUserCoinsData] = useState({ userId: "", coins: "", errors: "" });
  const [addAdminData, setAddAdminData] = useState({
    username: "",
    email: "",
    password: "",
    privileges: [],
  });
  const [user, setUser] = useState("");
  const [userHistory, setUserHistory] = useState([]);

  const handleGiftUserCoins = async () => {
    try {
      await giftUserCoins({ userId: giftedCoinsData.userId, amount: giftedCoinsData.amount });
      toast.success("╪к┘Е ╪з╪╢╪з┘Б╪й ╪з┘Д╪з┘Д╪╣╪з╪и ╪и┘Ж╪м╪з╪н ЁЯОЙ");
      setGiftedCoinsData({ userId: "", amount: "", errors: "" });
    } catch (error) {
      toast.error("╪н╪п╪л ╪о╪╖╪г тЪая╕П");
      console.error("Error gifting coins:", error);
      setGiftedCoinsData((prev) => ({ ...prev, errors: "╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ╪е╪▒╪│╪з┘Д ╪з┘Д╪╣┘Е┘Д╪з╪к" }));
    }
  };

  const handleGetUserCoins = async () => {
    try {
      const coins = await getUserCoins(userCoinsData.userId);
      setUserCoinsData((prev) => ({ ...prev, coins }));
    } catch (error) {
      toast.error("╪н╪п╪л ╪о╪╖╪г тЪая╕П");
      console.error("Error gifting coins:", error);
      setUserCoinsData((prev) => ({ ...prev, errors: "╪н╪п╪л ╪о╪╖╪г ╪г╪л┘Ж╪з╪б ┘Е╪н╪з┘И┘Д╪й ╪м┘Д╪и ╪з┘Д╪╣┘Е┘Д╪з╪к" }));
    }
  };

  const handleAddAdmin = async () => {
    try {
      await addAdmin(addAdminData);
      toast.success("┘Ж╪м╪н ╪╣┘Е┘Д ╪з┘Д╪з╪п┘Е┘Ж");
    } catch (error) {
      toast.error("╪н╪п╪л ╪о╪╖╪г тЪая╕П");
      console.error("Error adding admin", error);
    }
  };

  const handleGetHistory = async () => {
    try {
      const history = await getUserGameHistory(user);
      setUserHistory(history);
    } catch (error) {
      toast.error("╪н╪п╪л ╪о╪╖╪г");
      console.error("Error getting history:", error);
    }
  };

  const handleTogglePrivilege = (privilege) => {
    setAddAdminData((prev) => {
      const hasPrivilege = prev.privileges.includes(privilege);
      return {
        ...prev,
        privileges: hasPrivilege
          ? prev.privileges.filter((p) => p !== privilege)
          : [...prev.privileges, privilege],
      };
    });
  };

  return (
    <>
      <div className="control">
        <div className="container">
          <div className="control-cont">
            <div className="h-cont">
              <div className="back-btn">
                <button
                  onClick={(e) => {
                    e.preventDefault();
                    window.location.href = "/admin";
                  }}
                >
                  <img src="/back.png" alt="" />
                </button>
              </div>
              <h1>╪з╪п┘И╪з╪к ╪з┘Д╪к╪н┘Г┘Е </h1>
              <div className="cont-info"></div>
            </div>
            <div className="cards">
              <div className="card">
                <div className="info">
                  <div className="btn">
                    <button className="color" onClick={handleGetUserCoins}>
                      ╪╣╪▒╪╢
                    </button>
                    <button
                      className="no-color"
                      onClick={() => {
                        setUserCoinsData({ userId: "", coins: "", errors: "" });
                      }}
                    >
                      ╪з╪╣╪з╪п╪й ╪к┘З┘К╪ж╪й
                    </button>
                  </div>
                  <h2>╪з┘Д╪к╪н┘Г┘Е ┘Б┘К ╪з┘Д╪г┘Д╪╣╪з╪и ╪з┘Д┘Е╪к╪и┘В┘К╪й</h2>
                </div>
                <div className="inputs">
                  <input
                    type="text"
                    placeholder=" ID ╪е┘К┘Е┘К┘Д ╪▒┘В┘Е ╪з┘Д┘З╪з╪к┘Б ╪г┘И"
                    dir="rtl"
                    value={userCoinsData.userId}
                    onChange={(e) =>
                      setUserCoinsData((prev) => ({ ...prev, userId: e.target.value }))
                    }
                  />
                  {userCoinsData.coins && (
                    <div style={{ direction: "rtl", fontSize: "18px" }}>
                      <h2
                        style={{
                          direction: "rtl",
                          textAlign: "right",
                          display: "flex",
                          alignItems: "center",
                          gap: "10px",
                          paddingRight: "14px",
                        }}
                      >
                        <span
                          style={{
                            display: "flex",
                            alignItems: "center",
                            gap: "8px",
                          }}
                        >
                          <span className="coin"></span>
                          {userCoinsData.coins}
                        </span>
                        ┘Д╪╣╪и╪й ┘Е╪к╪и┘В┘К╪й
                      </h2>
                    </div>
                  )}
                </div>
              </div>
              <div className="card">
                <div className="info">
                  <div className="btn">
                    <button className="color" onClick={handleGetHistory}>
                      ╪╣╪▒╪╢
                    </button>
                  </div>
                  <h2>╪╣╪▒╪╢ ╪з┘Д╪г┘Д╪╣╪з╪и ╪з┘Д╪│╪з╪и┘В╪й</h2>
                </div>
                <div className="inputs">
                  <input
                    type="text"
                    placeholder=" ╪е┘К┘Е┘К┘Д ╪г┘И ╪▒┘В┘Е ╪з┘Д┘З╪з╪к┘Б "
                    dir="rtl"
                    value={user}
                    onChange={(e) => setUser(e.target.value)}
                  />
                  {userHistory?.gameHistory?.length > 0 ? (
                    <table
                      style={{
                        width: "100%",
                        marginTop: "15px",
                        direction: "rtl",
                        textAlign: "center",
                        fontSize: "25px",
                        borderCollapse: "collapse",
                      }}
                    >
                      <thead>
                        <tr style={{ background: "#000000", color: "#fff" }}>
                          <th style={{ border: "1px solid #ccc", padding: "8px" }}>#</th>
                          <th style={{ border: "1px solid #ccc", padding: "8px" }}>╪з╪│┘Е ╪з┘Д┘Д╪╣╪и╪й</th>
                          <th style={{ border: "1px solid #ccc", padding: "8px" }}>╪з┘Д╪к╪з╪▒┘К╪о</th>
                        </tr>
                      </thead>
                      <tbody>
                        {userHistory.gameHistory.map((game, index) => (
                          <tr key={game._id || index}>
                            <td style={{ border: "1px solid #ccc", padding: "6px" }}>
                              {index + 1}
                            </td>
                            <td style={{ border: "1px solid #ccc", padding: "6px" }}>
                              {game.gameName}
                            </td>
                            <td style={{ border: "1px solid #ccc", padding: "6px" }}>
                              {new Date(game.playedAt).toLocaleString("ar-EG")}
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  ) : (
                    <h2 style={{ marginTop: "15px", textAlign: "center", fontSize: "30px" }}>
                      ┘Д╪з ┘К┘И╪м╪п ╪з┘Д╪╣╪з╪и ╪│╪з╪и┘В┘З
                    </h2>
                  )}
                </div>
              </div>
              <div className="card">
                <div className="info">
                  <div className="btn">
                    <button className="color" onClick={() => handleAddAdmin()}>
                      ╪н┘Б╪╕
                    </button>
                    <button className="no-color">╪з╪╣╪з╪п╪й ╪к┘З┘К╪ж╪й</button>
                  </div>
                  <h2>╪к┘Б╪╢┘К┘Д╪з╪к ╪з┘Д╪к╪н┘Г┘Е</h2>
                </div>
                <div className="inputs">
                  <input
                    type="text"
                    placeholder=" ╪з╪│┘Е ╪з┘Д┘К┘И╪▓╪▒ "
                    dir="rtl"
                    value={addAdminData.username}
                    onChange={(e) =>
                      setAddAdminData((prev) => ({ ...prev, username: e.target.value }))
                    }
                  />
                  <input
                    type="text"
                    placeholder=" ╪е┘К┘Е┘К┘Д"
                    dir="rtl"
                    value={addAdminData.email}
                    onChange={(e) =>
                      setAddAdminData((prev) => ({ ...prev, email: e.target.value }))
                    }
                  />
                  <input
                    type="text"
                    placeholder="╪з┘Д╪и╪з╪│┘И╪▒╪п"
                    dir="rtl"
                    value={addAdminData.password}
                    onChange={(e) =>
                      setAddAdminData((prev) => ({ ...prev, password: e.target.value }))
                    }
                  />
                </div>
                <div className="tools">
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("view_files") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("view_files")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪╣╪▒╪╢ ╪з┘Д┘Е┘Д┘Б╪з╪к</h3>
                  </div>
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("view_sales") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("view_sales")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪╣╪▒╪╢ ╪з┘Д┘Е╪и┘К╪╣╪з╪к</h3>
                  </div>
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("view_reports") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("view_reports")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪╣╪▒╪╢ ╪з┘Д╪и┘Д╪з╪║╪з╪к</h3>
                  </div>
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("edit_reports") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("edit_reports")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪к╪╣╪п┘К┘Д ╪з┘Д╪и┘Д╪з╪║╪з╪к</h3>
                  </div>
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("full_control") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("full_control")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪к╪н┘Г┘Е ┘Г╪з┘Е┘Д</h3>
                  </div>
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("full_view") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("full_view")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪╣╪▒╪╢ ┘Г╪з┘Е┘Д</h3>
                  </div>
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("manage_categories") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("manage_categories")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪з╪п╪з╪▒╪й ╪з┘Д┘Б╪ж╪з╪к</h3>
                  </div>
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("view_messages") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("view_messages")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪╣╪▒╪╢ ╪з┘Д╪▒╪│╪з╪ж┘Д</h3>
                  </div>
                  <div
                    className={`tool ${
                      addAdminData.privileges.includes("edit_messages") ? "selected" : ""
                    }`}
                    onClick={() => handleTogglePrivilege("edit_messages")}
                  >
                    <img src="/dashr.png" alt="" />
                    <h3>╪к╪╣╪п┘К┘Д ╪з┘Д╪▒╪│╪з╪ж┘Д</h3>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};
export default Controls;
